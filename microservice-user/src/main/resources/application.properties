# Server port
server.port=8200

# Eureka configuration
spring.application.name=reminder-users
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Prefer IP address for registration
eureka.instance.prefer-ip-address=true
eureka.instance.ip-address=127.0.0.1
eureka.instance.instance-id=${spring.application.name}:${server.port}

# Set instance replication and heartbeat intervals

eureka.client.initial-instance-info-replication-interval-seconds=30
eureka.client.registry-fetch-interval-seconds=30
eureka.instance.lease-renewal-interval-in-seconds=30
eureka.instance.lease-expiration-duration-in-seconds=90

# Eviction interval timer (on Eureka server) - Uncomment if configuring on Eureka server
# eureka.server.eviction-interval-timer-in-ms=60000

# Health check configuration
eureka.instance.health-check-url-path=/actuator/health
eureka.client.healthcheck.enabled=true

# Expose all actuator endpoints, including health and info
management.endpoints.web.exposure.include=health,info

# Enable debug logging for Eureka to track issues
logging.level.com.netflix.eureka=DEBUG
logging.level.com.netflix.discovery=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG

# H2 in-memory database configuration
spring.datasource.url=jdbc:h2:mem:ReMinder
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.initialization-mode=always
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.devtools.restart.enabled=false
# Uncomment below for MySQL (local or cloud) configurations when switching databases
# For Local MySQL
# spring.datasource.url=jdbc:mysql://localhost:3306/db_example
# spring.datasource.username=spring_user
# spring.datasource.password=1234Abcd
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.show-sql=true
# spring.jpa.hibernate.ddl-auto=create-drop

# For Cloud MySQL
# spring.cloud.gcp.sql.database-name=concert
# spring.cloud.gcp.sql.instance-connection-name=webdev2-402308:us-central1:webmysql
# spring.datasource.username=spring_user
# spring.datasource.password=pass1234
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.show-sql=true
# spring.jpa.hibernate.ddl-auto=create-drop
